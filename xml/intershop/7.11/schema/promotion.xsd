<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
    xmlns:jxb="http://java.sun.com/xml/ns/jaxb" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc" 
    elementFormDefault="qualified" jxb:version="1.0">

    <xsd:include schemaLocation="https://intershop.github.io/xml/intershop/7.11/schema/core.xsd"/>
    
    <!-- Promotion -->
    <xsd:element name="promotion">
        <xsd:complexType mixed="false">
            <xsd:annotation>
                <xsd:documentation>Promotions are necessary to administer rebate and - may be later -
                    web content activities in a useful manner. At the promotion level, a promotion name
                    and description can be defined, a targetgroup can be selected, start and end dates
                    can be set, the promotion can be enabled or disabled. Within the time frame that has
                    been defined by a promotion all descending rebates are valid, although a rebate is
                    not bound to exactly the same start and end.</xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="active" type="xsd:boolean"/>
                <xsd:element name="applications" type="xsd:string" maxOccurs="unbounded"/>
                <xsd:element name="effect-discount-level" type="xsd:boolean"/>
                <xsd:element name="rank" type="xsd:int" minOccurs="0"/>
                <xsd:element name="start-date" type="simpleType.DateTime"/>
                <xsd:element name="end-date" type="simpleType.DateTime"/>
                <xsd:element name="type-code" type="xsd:int"/>
                <xsd:element name="creator-id" type="xsd:string" minOccurs="0"/>
                <xsd:element name="currency" type="simpleType.Generic.Currency.Mnemonic" maxOccurs="1" minOccurs="0"/>
                <xsd:element name="combinable" type="xsd:boolean"/>
                <xsd:element name="default-rank" type="xsd:boolean"/>
                <xsd:element name="multiple-allowed" type="xsd:boolean"/>
                <xsd:element name="available" type="xsd:boolean"/>

                <!-- 2. TargetGroups -->
                <xsd:element name="target-group" type="TargetGroup" minOccurs="0"/>
                
                <!-- 3. Budget -->
                <xsd:element name="budget" type="Budget"/>
                
                <!-- 4. Code Definition -->
                <xsd:element name="promotion-code-definition" type="PromotionCodeDefinition"/>
                
                <!-- 5. Combination -->
                <!-- TODO ... -->
                <xsd:element name="combination" type="xsd:int" minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>combinable with the action types listed in the
                            multiple-string attribute CombinationTypes.<br/> - bit 0 = 1: promotion is
                            combinable; = 0 not combinable<br/> - bit 1 = 1: other promotions along with
                            this one affecting a product are allowed; = 0: none of them
                            allowed</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                
                <!-- 6. Rebates -->
                <xsd:element name="rebates" type="Rebate" maxOccurs="unbounded" minOccurs="0"/>
                
                <!-- 7. Content -->
                <xsd:element name="content" type="Content"/>
                
                <!-- 8. Campaign -->
                <xsd:element name="use-campaign-target-group" type="xsd:boolean"/>
                <xsd:element name="use-campaign-time-frame" type="xsd:boolean"/>
                <xsd:element name="campaign" type="Campaign" minOccurs="0" maxOccurs="1">
                    <xsd:annotation>
                        <xsd:documentation>Gets the campaign the promotion is assigned
                            to.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                
                <!-- 9. Custom Attributes -->
                <xsd:element name="custom-attributes" type="complexType.CustomAttributes" minOccurs="0"
                maxOccurs="1"/>

                <!-- Attachments -->
                <xsd:element name="attachments" type="AdditionalContent" maxOccurs="unbounded"
                    minOccurs="0">
                    <xsd:annotation>
                        <xsd:documentation>Gets the attachements.</xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                
            </xsd:sequence>
            <!-- foreign key -->
            <xsd:attribute name="id" type="simpleType.Generic.String.256" use="required"/>
            
            <!-- for later usage:
            <xsd:attribute name="import-mode" type="simpleType.ImportMode"/>
            -->
        </xsd:complexType>
    </xsd:element>
	
    <!-- Content -->    
    <xsd:complexType name="Content">
        <xsd:sequence>
            <xsd:element name="content-activation-type" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>The type of the promotion content activation. <ul>
                        <li>ContentActivationTypes.PROMOTIONDATE: Use promotion start and end
                            date</li>
                        <li>ContentActivationTypes.DEFINEDDATE: Activate content at the defined
                            start</li>
                        <li>and end time ContentActivationTypes.CONTENTDATE: Use the publishing
                            start and end date of content</li>
                    </ul>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="content-activation-start-date" type="simpleType.DateTime" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="content-activation-end-date" type="simpleType.DateTime" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="content-assignments" type="ContentAssignment" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <!-- configuration of promotion codes/ code groups -->
    <xsd:complexType name="PromotionCodeDefinition">
        <xsd:sequence>
            <xsd:element name="promotion-code-required" type="xsd:boolean"/>
            <xsd:element name="single-code" type="xsd:string"/>
            <xsd:element name="single-code-total" type="xsd:int"/>
            <xsd:element name="unlimited" type="xsd:boolean"/>
            <xsd:element name="code-customer-unlimited" type="xsd:boolean"/>
            <xsd:element name="use-promotion-code-groups" type="xsd:boolean"/>
            <xsd:element name="promotion-code-groups" type="PromotionCodeGroups" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <!-- PromotionCodeGroups -->
    <xsd:complexType name="PromotionCodeGroups">
        <xsd:sequence>
            <xsd:element name="code-group-id" type="simpleType.Generic.String.256" minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <!-- Campaign -->
    <xsd:complexType name="Campaign">
        <xsd:annotation>
            <xsd:documentation>A campaign defines promotions and content to defined target groups in
                a time frame.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="campaign-target-group" type="simpleType.Generic.String.256"/>
            <xsd:element name="start-date" type="simpleType.DateTime"/>
            <xsd:element name="end-date" type="simpleType.DateTime"/>
            <xsd:element name="enabled" type="xsd:boolean">
                <xsd:annotation>
                    <xsd:documentation>Gets flag for an active campaign.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <!-- TargetGroup Assignment -->
    <xsd:complexType name="TargetGroup">
        <xsd:annotation>
            <xsd:documentation>References assigned usergroups.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="usergroups" type="UserGroupRef" minOccurs="0"
                maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="UserGroupRef">
        <xsd:attribute name="id" type="xsd:string" use="required"/>
        <xsd:attribute name="domain" type="xsd:string" use="required"/>
    </xsd:complexType>

    <!-- UserGroup -->
    <xsd:complexType name="UserGroup">
        <xsd:annotation>
            <xsd:documentation>Defines an user group.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="fixed" type="xsd:boolean">
                <xsd:annotation>
                    <xsd:documentation>Is fixed?</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="name" type="complexType.Generic.Attribute.String"/>
            <xsd:element name="description" type="complexType.Generic.Attribute.String"/>
            <xsd:element name="type-code" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the type code.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="simpleType.Generic.String.256" use="required"/>
    </xsd:complexType>

    <!-- Rebate -->
    <xsd:complexType name="Rebate">
        <xsd:annotation>
            <xsd:documentation>Defines a rebate.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="currency" type="simpleType.Generic.Currency.Mnemonic" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Gets the currency for which the rebate
                        applies.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="type-code" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the type code.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classification-type-code" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the classification type code. Divides between coupons
                        and standard rebates.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="position" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the position in rebate list.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="condition-override-application-exclusion" type="xsd:boolean" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Optional field, default is false.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="action-override-application-exclusion" type="xsd:boolean" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Optional field, default is false.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="condition" type="Condition" maxOccurs="1" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Gets the root condition of the condition
                        tree.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="actions" type="Action" maxOccurs="unbounded" minOccurs="0">
                <xsd:annotation>
                    <xsd:documentation>Gets the actions.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-attributes" type="complexType.CustomAttributes" minOccurs="0"
                maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>


    <!-- Condition -->
    <xsd:complexType name="Condition">
        <xsd:annotation>
            <xsd:documentation>Holds the data of a condition.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="condition-descriptor-id" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Gets the condition descriptor ID.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="position" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the position under an parent
                        condition.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="type-code" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the type code of the condition.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="sub-conditions" type="Condition" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>Gets the sub conditions in the condition
                        tree.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-attributes" type="complexType.CustomAttributes" minOccurs="0"
                maxOccurs="1"/>
            <xsd:element name="inclusions-exclusions" type="InclusionsExclusions" minOccurs="0"
                maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- Action -->
    <xsd:complexType name="Action">
        <xsd:annotation>
            <xsd:documentation>Holds the data of an action.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="action-descriptor-id" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Gets the action descriptor ID.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="position" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the position under an parent
                        condition.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="classification" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Gets the classification to determine
                        priority.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-attributes" type="complexType.CustomAttributes" minOccurs="0"
                maxOccurs="1"/>
            <xsd:element name="inclusions-exclusions" type="InclusionsExclusions" minOccurs="0"
                maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <!-- Inclusions and Exclusions -->
    <xsd:complexType name="InclusionsExclusions">
        <xsd:sequence>
            <xsd:element name="scope" type="simpleType.FilterObjectScope"/>
            <xsd:element name="category-inclusion" type="CatalogRef" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="product-inclusion" type="CatalogRef" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="category-exclusion" type="CatalogRef" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="product-exclusion" type="CatalogRef" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="CatalogRef">
        <xsd:attribute name="id" type="xsd:string" use="required"/>
        <xsd:attribute name="domain" type="xsd:string" use="required"/>
    </xsd:complexType>
    
    <xsd:simpleType name="simpleType.FilterObjectScope">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="NONE" />
            <xsd:enumeration value="ACTION" />
            <xsd:enumeration value="CONDITION" />
            <xsd:enumeration value="CHANNEL" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <!-- Budget -->
    <xsd:complexType name="Budget">
        <xsd:annotation>
            <xsd:documentation>This class models a budget that can be defined upon a given account
                (within an optional scope). A budget basically provides a time based view upon the
                underlying account that allows to track account spendings in a certain time frame.
                Budgets support 2 different approaches for defining budget time frames. The simple
                approach is to setup reoccuring budgets that are valid for a fixed period of time
                (e.g. a week, a month or a quarter - the budget amount would be the same for each
                week, month of quarter). The second approach allows the definition of budget
                schedules. A budget schedule supports any number of arbitrary time frames - each
                having a possibly different budget amount.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="budget-amount" type="xsd:decimal" minOccurs="0"/>
            <xsd:element name="budget-currency" type="simpleType.Generic.Currency.Mnemonic" minOccurs="0"/>
            <xsd:element name="budget-id" type="xsd:string" minOccurs="0"/>
            <xsd:element name="budget-notification-threshold" type="xsd:double" minOccurs="0"/>
            <xsd:element name="budget-notification-email" type="xsd:string" minOccurs="0"/>
            <xsd:element name="send-mail-if-budget-reached" type="xsd:boolean" minOccurs="0"/>
            <xsd:element name="send-mail-if-threshold-reached" type="xsd:boolean" minOccurs="0"/>
            <xsd:element name="disable-by-budget" type="xsd:boolean" minOccurs="0"/>
            <xsd:element name="unlimited" type="xsd:boolean"/>
            <xsd:element name="custom-attributes" type="complexType.CustomAttributes" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- AdditionalContent -->
    <xsd:complexType name="AdditionalContent">
        <xsd:annotation>
            <xsd:documentation>This class implements the methods for AdditionalContent as defined in
                the object model. This class is a wrapper class for additional content that is bind
                to an extensible object by custom attributes. The appropriate custom attributes are
                filtered by special name prefixes.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="value" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Gets the value.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="type" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Gets the type.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="key" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation>Gets the key.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <!-- ContentAssignment -->
    <xsd:complexType name="ContentAssignment">
        <xsd:annotation>
            <xsd:documentation>References assigned content.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="page-variant" type="PageletReferenceType" minOccurs="0"
                maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>Gets the page variants.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            
            <xsd:element name="component" type="PageletReferenceType" minOccurs="0"
                maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>Gets the components.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    
    <!-- PageletReferenceType -->
    <xsd:complexType name="PageletReferenceType">
        <xsd:attribute name="id" type="simpleType.Generic.String.256" use="required"/>
		<xsd:attribute name="domain" type="simpleType.Generic.String.256" use="required"/>
    </xsd:complexType>    

    <!-- PromotionCode -->
    <!--
    <xsd:complexType name="PromotionCode">
        <xsd:sequence>
            <xsd:element name="secured" type="xsd:boolean"/>
            <xsd:element name="status" type="xsd:int">
                <xsd:annotation>
                    <xsd:documentation>Code Status an integer, identifying one of the stati: <ul>
                        <li>0 (not redeemed)</li>
                        <li>1 (full redeemed)</li>
                        <li>2 (deactivated)</li>
                    </ul>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="redemption-date" type="simpleType.DateTime"/>
            <xsd:element name="order-numbers" type="complexType.Generic.Attribute.String"
                minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                    <xsd:documentation>The order numbers where the promotion code was
                        used.</xsd:documentation>
                </xsd:annotation>
            </xsd:element>
            <xsd:element name="custom-attributes" type="complexType.CustomAttributes" minOccurs="0"
                maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="code" type="simpleType.Generic.String.256" use="required"/>
    </xsd:complexType>
    -->
    
</xsd:schema>
